/*

각 창문은 그 번호의 약수일 때마다 열리거나 닫히게 됩니다.
예를 들어 6번 창문은 1번째, 2번째, 3번째, 6번째 사람이 각기 열고 닫게 됩니다. 이처럼 특정 창문이 열리고 닫히는 횟수는 해당 창문의 약수의 개수와 관련이 있습니다.
그런데, 중요한 점은 약수의 개수가 홀수인 경우에만 창문이 마지막에 열려 있게 됩니다. 예를 들어, 약수가 짝수이면 창문이 열렸다가 다시 닫히는 순서로 진행되지만, 약수가 홀수이면 마지막에 열리게 됩니다.
약수의 개수가 홀수인 숫자는 "제곱수"입니다. 왜냐하면, 일반적으로 약수는 짝을 이루지만 제곱수인 경우 하나의 약수가 반복되기 때문에 약수의 개수가 홀수가 됩니다. 예를 들어, 36은 약수가 1, 2, 3, 4, 6, 9, 12, 18, 36으로 총 9개입니다.
따라서, 열려 있는 창문의 개수는 1부터 N 사이에 있는 완전 제곱수의 개수와 동일합니다.

*/

#include <iostream>
#include <cmath>

using namespace std;

int main() {
    cin.tie(NULL);
    cout.tie(NULL);
    ios::sync_with_stdio(false);

    int n;
    cin >> n;

    int result = sqrt(n);

    cout << result << "\n";
    
    return 0;
}
